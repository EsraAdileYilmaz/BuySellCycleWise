<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testsuite errors="0" failures="10" name="io.cucumber.core.plugin.JUnitFormatter" skipped="0" tests="30" time="252.972">
    <testcase classname="BACKEND JDBC TESTING" name="US01_Verify the name value of a categorie with 'slug = fashion' in the categories table." time="11.639">
        <system-out><![CDATA[* Database connection is established........................................passed
* Verify the name value of a categorie Query is prepared and executed.......passed
* Verify the "name" information Results are obtained........................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="US_02 Add data containing the values (id,name,state_id,status,created_at) to the cities table. verify that the data was added from the cities table." time="173.541">
        <failure message="com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction" type="java.lang.RuntimeException"><![CDATA[* Database connection is established........................................passed
* Insert data to the cities table...........................................passed
* Verify the data information Result is obtained............................failed
* Database connection is closed.............................................skipped

StackTrace:
java.lang.RuntimeException: com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction
	at stepdefinitions.DB_Stepdefinitions.verify_the_data_information_result_is_obtained(DB_Stepdefinitions.java:77)
	at ✽.Verify the data information Result is obtained.(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:19)
Caused by: com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:123)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at stepdefinitions.DB_Stepdefinitions.verify_the_data_information_result_is_obtained(DB_Stepdefinitions.java:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
	at io.cucumber.java.Invoker.invoke(Invoker.java:24)
	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
	at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
	at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)
	at io.cucumber.core.runner.TestStep.run(TestStep.java:57)
	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
	at io.cucumber.core.runner.TestCase.run(TestCase.java:95)
	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at io.cucumber.junit.Cucumber$RunBeforeAllHooks.evaluate(Cucumber.java:266)
	at io.cucumber.junit.Cucumber$RunAfterAllHooks.evaluate(Cucumber.java:281)
	at io.cucumber.junit.Cucumber$StartTestRun.evaluate(Cucumber.java:233)
	at io.cucumber.junit.Cucumber$FinishTestRun.evaluate(Cucumber.java:248)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="US_03 Delete the data containing the values (id=?,name=?) in the cities table. Verify that it has been deleted." time="50.569">
        <failure message="com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction" type="java.lang.RuntimeException"><![CDATA[* Database connection is established........................................passed
* Insert data to the cities table...........................................passed
* Verify the data information Result is obtained............................failed
* Delete city to the cities table...........................................skipped
* Verify the data information Result is obtained............................skipped
* Database connection is closed.............................................skipped

StackTrace:
java.lang.RuntimeException: com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction
	at stepdefinitions.DB_Stepdefinitions.verify_the_data_information_result_is_obtained(DB_Stepdefinitions.java:77)
	at ✽.Verify the data information Result is obtained.(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:26)
Caused by: com.mysql.cj.jdbc.exceptions.MySQLTransactionRollbackException: Lock wait timeout exceeded; try restarting transaction
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:123)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at stepdefinitions.DB_Stepdefinitions.verify_the_data_information_result_is_obtained(DB_Stepdefinitions.java:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
	at io.cucumber.java.Invoker.invoke(Invoker.java:24)
	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
	at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
	at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)
	at io.cucumber.core.runner.TestStep.run(TestStep.java:57)
	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
	at io.cucumber.core.runner.TestCase.run(TestCase.java:95)
	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at io.cucumber.junit.Cucumber$RunBeforeAllHooks.evaluate(Cucumber.java:266)
	at io.cucumber.junit.Cucumber$RunAfterAllHooks.evaluate(Cucumber.java:281)
	at io.cucumber.junit.Cucumber$StartTestRun.evaluate(Cucumber.java:233)
	at io.cucumber.junit.Cucumber$FinishTestRun.evaluate(Cucumber.java:248)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="US04 In the contacts table, add a data containing (id,name,email,query_type,message) and update the message information." time="0.59">
        <system-out><![CDATA[* Database connection is established........................................passed
* Insert data to the contacts table.........................................passed
* Verify the data information Result is obtained............................passed
* Update message data to the contacts table.................................passed
* Verify the data information Result is obtained............................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="US_05 Add a data containing  information in the contacts table." time="0.566">
        <system-out><![CDATA[* Database connection is established........................................passed
* Insert data to the contacts table.........................................passed
* Verify the data information Result is obtained............................passed
* Delete data to the contacts table.........................................passed
* Verify the data information Result is obtained............................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="US_06 Group the coupon_products table by coupon_id and find how many products there are for each coupon." time="0.484">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared and executed in the database for coupon_products table by coupon_id groups.passed
* Verify the data coupon_id groups information Result is obtained...........passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="US_07" time="0">
        <failure message="The scenario has no steps" type="java.lang.Exception"/>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="US_08 Verify that the first 5 data names in the delivery_processes table are in reverse order." time="0.551">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared and executed in the database for the delivery_processes table are in reverse order.passed
* Verify that the first 5 data names........................................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="In the log_activity table, calculate and verify the number of topics with ip and method" time="0.503">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared and executed in the database for the log_activity table.passed
* Verify the count of subject...............................................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Verify the number of users whose 'shipping_address' and 'billing_address' are not the same in the order_address_details table." time="0.559">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared and executed in the database for the order_address_details table.passed
* Verify the adresses details aren't the same...............................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Calculate the sum of the amount values of the data with type='Referral' and 'id' between 10 and 20 in the wallet_balances table" time="0.553">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared and executed in the database for the wallet_balances table.passed
* Verify the calculate sum of the amount values of the data.................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="List the unique 'notes' in the US_12 attendances table, separated by days." time="0.534">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared and executed in the database for the attendances table..passed
* Verify List the unique 'notes' values of the data.........................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="List the top 3 products in the seller_products table that are not associated with any coupon" time="0.556">
        <system-out><![CDATA[* Database connection is established........................................passed
* product query not associated with a coupon is prepared....................passed
* Verify List the top 3 products............................................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Verify whether there is data in the refund_reasons table with a 'reason' value of Null." time="0.486">
        <failure message="Cannot invoke &quot;java.lang.String.contains(java.lang.CharSequence)&quot; because the return value of &quot;java.util.List.get(int)&quot; is null" type="java.lang.NullPointerException"><![CDATA[* Database connection is established........................................passed
* In the refund_reasons table, a query is prepared that retrieves data whose 'reason' value is Null..passed
* Verify whether there is data with a 'reason' value of Null................failed
* Database connection is closed.............................................skipped

StackTrace:
java.lang.NullPointerException: Cannot invoke "java.lang.String.contains(java.lang.CharSequence)" because the return value of "java.util.List.get(int)" is null
	at stepdefinitions.DB_Stepdefinitions.verify_whether_there_is_data_with_a_value_of_null(DB_Stepdefinitions.java:304)
	at ✽.Verify whether there is data with a 'reason' value of Null(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:108)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="List the information of the first 3 data in the customer_coupon_stores table from the users table." time="0.628">
        <system-out><![CDATA[* Database connection is established........................................passed
* Prepare the query that brings the information of the first 3 data in the customer_coupon_stores table.passed
* Verify the information of the first 3 data in the table...................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="List ids with shipping_address = 'Switzerland' in the order_address_details table according to the orders table." time="0.54">
        <failure message="expected:&lt;3&gt; but was:&lt;4&gt;" type="java.lang.AssertionError"><![CDATA[* Database connection is established........................................passed
* In the order_address_details table, prepare a query that retrieves ids with shipping_address = 'Switzerland'.passed
* Verify the shipping_address information of 3 data in the table............failed
* Database connection is closed.............................................skipped

StackTrace:
java.lang.AssertionError: expected:<3> but was:<4>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:645)
	at org.junit.Assert.assertEquals(Assert.java:631)
	at stepdefinitions.DB_Stepdefinitions.verify_the_shipping_address_information_of_data_in_the_table(DB_Stepdefinitions.java:347)
	at ✽.Verify the shipping_address information of 3 data in the table(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:120)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Verify the email address of the data with id=5 in the user table from the attendances created before 2022 in the attendances table." time="0.523">
        <system-out><![CDATA[* Database connection is established........................................passed
* Prepare a query that retrieves the data with id 5 in the user table created before 2022 in the attendances table.passed
* Verify the e-mail address of the data with id 5...........................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Enter 5 data in bulk to the bank_accounts table and verify that it is added." time="0.876">
        <failure message="Duplicate entry '3768521' for key 'PRIMARY'" type="java.sql.BatchUpdateException"><![CDATA[* Database connection is established........................................passed
* Prepare a query that adds 5 data to the bank_accounts table in bulk.......failed
* 5 Enter the data in bulk. Check that it is added to the table.............skipped
* Database connection is closed.............................................skipped

StackTrace:
java.sql.BatchUpdateException: Duplicate entry '3768521' for key 'PRIMARY'
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)
	at com.mysql.cj.util.Util.handleNewInstance(Util.java:192)
	at com.mysql.cj.util.Util.getInstance(Util.java:167)
	at com.mysql.cj.util.Util.getInstance(Util.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLError.createBatchUpdateException(SQLError.java:224)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchSerially(ClientPreparedStatement.java:816)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchInternal(ClientPreparedStatement.java:418)
	at com.mysql.cj.jdbc.StatementImpl.executeBatch(StatementImpl.java:795)
	at stepdefinitions.DB_Stepdefinitions.prepare_a_query_that_adds_data_to_the_bank_accounts_table_in_bulk(DB_Stepdefinitions.java:394)
	at ✽.Prepare a query that adds 5 data to the bank_accounts table in bulk.(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:133)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '3768521' for key 'PRIMARY'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchSerially(ClientPreparedStatement.java:795)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchInternal(ClientPreparedStatement.java:418)
	at com.mysql.cj.jdbc.StatementImpl.executeBatch(StatementImpl.java:795)
	at stepdefinitions.DB_Stepdefinitions.prepare_a_query_that_adds_data_to_the_bank_accounts_table_in_bulk(DB_Stepdefinitions.java:394)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
	at io.cucumber.java.Invoker.invoke(Invoker.java:24)
	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
	at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
	at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86)
	at io.cucumber.core.runner.TestStep.run(TestStep.java:57)
	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
	at io.cucumber.core.runner.TestCase.run(TestCase.java:95)
	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)
	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151)
	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151)
	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)
	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)
	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at io.cucumber.junit.Cucumber$RunBeforeAllHooks.evaluate(Cucumber.java:266)
	at io.cucumber.junit.Cucumber$RunAfterAllHooks.evaluate(Cucumber.java:281)
	at io.cucumber.junit.Cucumber$StartTestRun.evaluate(Cucumber.java:233)
	at io.cucumber.junit.Cucumber$FinishTestRun.evaluate(Cucumber.java:248)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Verify that the opening_balance value of the data with bank_name=? in the bank_accounts table is not updated with a negative value." time="0.585">
        <failure message="" type="java.lang.AssertionError"><![CDATA[* Database connection is established........................................passed
* Bank names in the table are saved.........................................passed
* Prepare a query that verifies that the bank_accounts table is not updated with a negative value.passed
* Verify bank_accounts table is not updated with a negative value...........failed
* Database connection is closed.............................................skipped

StackTrace:
java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at stepdefinitions.DB_Stepdefinitions.verify_bank_accounts_table_is_not_updated_with_a_negative_value(DB_Stepdefinitions.java:435)
	at ✽.Verify bank_accounts table is not updated with a negative value(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:141)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Enter 10 data into the device_tokens table at the same time and verify that it is added to the table." time="1.099">
        <system-out><![CDATA[* Database connection is established........................................passed
* Prepare a query that adds 10 data to the device_tokens table in bulk......passed
* 10 Enter the data in bulk. Check that it is added to the table............passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Calculate the number of orders placed according to the order_id in the guest_order_details table. Update the shipping_name information of the data with order number (order_id=?)." time="0.751">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared to calculate the number of orders placed according to the order_id in the guest_order_details table.passed
* Updates the shipping_name of the data with the order number order_id 23...passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Enter 1 data in the digital_gift_cards table and delete the added data by entering the id number in the digital_gift_cards table." time="0.677">
        <system-out><![CDATA[* Database connection is established........................................passed
* Prepare query for  data entry to digital_gift_cards table.................passed
* 1 Enter the data in bulk. Check that it is added to the table.............passed
* Prepare query for  data delete to digital_gift_cards table................passed
* Verify the data information Result is obtained............................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="In the email_template_types table, query the number of types by grouping the data whose module value is not null." time="0.612">
        <failure message="Before start of result set" type="java.sql.SQLException"><![CDATA[* Database connection is established........................................passed
* In the email_template_types table, query querying the number of types by grouping the data whose module value is not null is prepared..failed
* The results of the type number are checked................................skipped
* Database connection is closed.............................................skipped

StackTrace:
java.sql.SQLException: Before start of result set
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.result.ResultSetImpl.checkRowPos(ResultSetImpl.java:532)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1322)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:830)
	at stepdefinitions.DB_Stepdefinitions.ın_the_email_template_types_table_query_querying_the_number_of_types_by_grouping_the_data_whose_module_value_is_not_null_is_prepared(DB_Stepdefinitions.java:553)
	at ✽.In the email_template_types table, query querying the number of types by grouping the data whose module value is not null is prepared.(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:170)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="In the orders table, list the data that does not contain customer in the customer_email data" time="0.622">
        <failure message="expected:&lt;30&gt; but was:&lt;31&gt;" type="java.lang.AssertionError"><![CDATA[* Database connection is established........................................passed
* In the orders table, the desired Query is prepared as order_number in reverse order..passed
* 30 rows are verified to return............................................failed
* Database connection is closed.............................................skipped

StackTrace:
java.lang.AssertionError: expected:<30> but was:<31>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at stepdefinitions.DB_Stepdefinitions.rows_are_verified_to_return(DB_Stepdefinitions.java:584)
	at ✽.30 rows are verified to return(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:178)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="In the order_payments table, group the data without txn_id='none' according to their txn_id," time="0.602">
        <system-out><![CDATA[* Database connection is established........................................passed
* Write the desired query in the order_payments table.......................passed
* List of Max values is validated...........................................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Group the data in the transactions table according to the payment_method information" time="0.545">
        <system-out><![CDATA[* Database connection is established........................................passed
* Prepare the desired Query in the transactions table.......................passed
* Verifies the reverse sort list by payment_method for those with a total amount over 7000.passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="In the transactions table, list the data with payment_method='Stripe' and payment_method= 'Cash On Delivery' with unique descriptions." time="0.629">
        <system-out><![CDATA[* Database connection is established........................................passed
* Prepare a query that returns data with unique descriptions in the transactions table.passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="In the support_tickets table, list the unique user_ids of the data with and without '-' in reference_no." time="0.569">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared listing the unique user_ids of the data.................passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Calculate and verify the average grand_total value of paid orders (is_paid =1) in the orders table." time="0.541">
        <failure message="expected:&lt;179713&gt; but was:&lt;176420&gt;" type="java.lang.AssertionError"><![CDATA[* Database connection is established........................................passed
* Query is prepared Calculate and verify the average grand_total value of paid orders.failed
* Database connection is closed.............................................skipped

StackTrace:
java.lang.AssertionError: expected:<179713> but was:<176420>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:645)
	at org.junit.Assert.assertEquals(Assert.java:631)
	at stepdefinitions.DB_Stepdefinitions.query_is_prepared_calculate_and_verify_the_average_grand_total_value_of_paid_orders(DB_Stepdefinitions.java:682)
	at ✽.Query is prepared Calculate and verify the average grand_total value of paid orders(file:///C:/Users/Asremir/IdeaProjects/buySellCycleBackendProject/src/test/resources/features/DB/DB.feature:214)
]]></failure>
    </testcase>
    <testcase classname="BACKEND JDBC TESTING" name="Calculate the total cost of products with is_buy_now=1 before 2024-03-30 in the carts table" time="0.592">
        <system-out><![CDATA[* Database connection is established........................................passed
* Query is prepared Calculate and verify the total cost of products.........passed
* Database connection is closed.............................................passed
]]></system-out>
    </testcase>
</testsuite>
